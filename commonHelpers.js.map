{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\niziToast.settings({\n  position: 'topRight',\n});\n\nlet userSelectedDate;\nconst startButton = document.querySelector('[data-start]');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    const currentDate = new Date();\n    if (userSelectedDate <= currentDate) {\n      startButton.setAttribute('disabled', 'true');\n      iziToast.show({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        backgroundColor: '#EF4040',\n        titleColor: '#FFFFFF',\n        messageColor: '#FFFFFF',\n        progressBarColor: '#FFBEBE',\n        close: false,\n        progressBar: true,\n      });\n    } else {\n      startButton.removeAttribute('disabled');\n    }\n  },\n};\n\nconst fp = flatpickr('#datetime-picker', options);\n\nfunction startCountdown() {\n  const countdownInterval = setInterval(() => {\n    const currentTime = new Date().getTime();\n    const timeDifference = userSelectedDate - currentTime;\n\n    if (timeDifference <= 0) {\n      clearInterval(countdownInterval);\n      displayTime(0);\n      return;\n    }\n\n    displayTime(timeDifference);\n  }, 1000);\n}\n\nfunction displayTime(time) {\n  const days = Math.floor(time / (1000 * 60 * 60 * 24));\n  const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  const minutes = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n  const seconds = Math.floor((time % (1000 * 60)) / 1000);\n\n  daysElement.textContent = formatTime(days);\n  hoursElement.textContent = formatTime(hours);\n  minutesElement.textContent = formatTime(minutes);\n  secondsElement.textContent = formatTime(seconds);\n}\n\nfunction formatTime(time) {\n  return time < 10 ? `0${time}` : time;\n}\n\nstartButton.addEventListener('click', startCountdown);\n"],"names":["iziToast","userSelectedDate","startButton","daysElement","hoursElement","minutesElement","secondsElement","options","selectedDates","currentDate","flatpickr","startCountdown","countdownInterval","currentTime","timeDifference","displayTime","time","days","hours","minutes","seconds","formatTime"],"mappings":"2GAKAA,EAAS,SAAS,CAChB,SAAU,UACZ,CAAC,EAED,IAAIC,EACJ,MAAMC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAExDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBP,EAAmBO,EAAc,GACjC,MAAMC,EAAc,IAAI,KACpBR,GAAoBQ,GACtBP,EAAY,aAAa,WAAY,MAAM,EAC3CF,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,qCACT,gBAAiB,UACjB,WAAY,UACZ,aAAc,UACd,iBAAkB,UAClB,MAAO,GACP,YAAa,EACrB,CAAO,GAEDE,EAAY,gBAAgB,UAAU,CAEzC,CACH,EAEWQ,EAAU,mBAAoBH,CAAO,EAEhD,SAASI,GAAiB,CACxB,MAAMC,EAAoB,YAAY,IAAM,CAC1C,MAAMC,EAAc,IAAI,KAAM,EAAC,QAAO,EAChCC,EAAiBb,EAAmBY,EAE1C,GAAIC,GAAkB,EAAG,CACvB,cAAcF,CAAiB,EAC/BG,EAAY,CAAC,EACb,MACD,CAEDA,EAAYD,CAAc,CAC3B,EAAE,GAAI,CACT,CAEA,SAASC,EAAYC,EAAM,CACzB,MAAMC,EAAO,KAAK,MAAMD,EAAQ,KAAoB,EAC9CE,EAAQ,KAAK,MAAOF,GAAQ,IAAO,GAAK,GAAK,KAAQ,IAAO,GAAK,GAAG,EACpEG,EAAU,KAAK,MAAOH,GAAQ,IAAO,GAAK,KAAQ,IAAO,GAAG,EAC5DI,EAAU,KAAK,MAAOJ,GAAQ,IAAO,IAAO,GAAI,EAEtDb,EAAY,YAAckB,EAAWJ,CAAI,EACzCb,EAAa,YAAciB,EAAWH,CAAK,EAC3Cb,EAAe,YAAcgB,EAAWF,CAAO,EAC/Cb,EAAe,YAAce,EAAWD,CAAO,CACjD,CAEA,SAASC,EAAWL,EAAM,CACxB,OAAOA,EAAO,GAAK,IAAIA,IAASA,CAClC,CAEAd,EAAY,iBAAiB,QAASS,CAAc"}